[comment encoding = UTF-8 /]
[module util('http://www.eclipse.org/uml2/5.0.0/UML')]
[import org::eclipse::acceleo::module::publicdocs::common::configuration::giveconfiguration /]

[query public getDependencies (pack : Package, prop: Property) : Set(Dependency) 
= pack.packagedElement->select(oclIsTypeOf(Dependency) and 
  (oclAsType(Dependency).client->any(true) = prop or not prop.owner.oclAsType(Class).general->isEmpty() and oclAsType(Dependency).client->any(true) = prop.getParentProperty()))/]

[query public getDirectDependencies (pack : Package, elt: Element) : Set(Dependency) 
= pack.packagedElement->select(oclIsTypeOf(Dependency) and oclAsType(Dependency).client->any(true) = elt)/]

[query public getParentProperty (prop: Property) : Property 
= prop.owner.oclAsType(Class).general->any(true).oclAsType(Class).ownedAttribute->select(name = prop.name)->any(true).oclAsType(Property) /]

[query public isGlobalElement (class : Class) : Boolean 
= class.getAppliedStereotype('isa::xsdGlobalElement')->notEmpty()/]

[query public isChoice (class : Class) : Boolean 
= class.getAppliedStereotype('isa::xsdChoice')->notEmpty()/]

[query public isLocal (type : PackageableElement): Boolean 
= type.oclIsTypeOf(Class) and (type.oclAsType(Class).isChoice() or type.oclAsType(Class).ownedAttribute->isEmpty())/]

[query public isAttribute (property : Property) : Boolean 
= property.name.startsWith('_')/]

[query public hasStereotype (packageableElement : PackageableElement, name: String) : Boolean 
= packageableElement.getAppliedStereotype(name)->notEmpty()/]

[query public hasStereotypeISA(packageableElement : PackageableElement) : Boolean 
= hasStereotype(packageableElement, 'isa::xsdSchema')/]

[query public hasStereotype (property : Property, name: String) : Boolean 
= property.getAppliedStereotype(name)->notEmpty()/]

[query public getFilename (path : String, name: String, suffix : String, version : String, extension : String ) : String
= getConfig(path).concat(name).concat(suffix).concat(version).concat(extension)/]

[query public getFilenameHTM (path : String, name: String, suffix : String, version : String ) : String
= getFilename(path, name, suffix, version, '.htm')/]

[query public getFilenameXSD (path : String, name: String, suffix : String, version : String ) : String
=  getFilename(path, name, suffix, version, '.xsd')/]


